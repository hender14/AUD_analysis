// Code generated by MockGen. DO NOT EDIT.
// Source: app/interfaces/gateway/IFRepository.go

// Package mock_gateway is a generated GoMock package.
package gateway

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/hender14/app/domain"
	// gateway "github.com/hender14/app/interfaces/gateway"
)

// MockCRUD is a mock of CRUD interface.
type MockCRUD struct {
	ctrl     *gomock.Controller
	recorder *MockCRUDMockRecorder
}

// MockCRUDMockRecorder is the mock recorder for MockCRUD.
type MockCRUDMockRecorder struct {
	mock *MockCRUD
}

// NewMockCRUD creates a new mock instance.
func NewMockCRUD(ctrl *gomock.Controller) *MockCRUD {
	mock := &MockCRUD{ctrl: ctrl}
	mock.recorder = &MockCRUDMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCRUD) EXPECT() *MockCRUDMockRecorder {
	return m.recorder
}

// Fscreate mocks base method.
func (m *MockCRUD) Fscreate(arg0 *domain.SignUser) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fscreate", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Fscreate indicates an expected call of Fscreate.
func (mr *MockCRUDMockRecorder) Fscreate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fscreate", reflect.TypeOf((*MockCRUD)(nil).Fscreate), arg0)
}

// Fsdelete mocks base method.
func (m *MockCRUD) Fsdelete(arg0 *domain.SignUser) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fsdelete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Fsdelete indicates an expected call of Fsdelete.
func (mr *MockCRUDMockRecorder) Fsdelete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fsdelete", reflect.TypeOf((*MockCRUD)(nil).Fsdelete), arg0)
}

// Fsquery mocks base method.
func (m *MockCRUD) Fsquery(arg0 *Fsqparam) ([]domain.SignUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fsquery", arg0)
	ret0, _ := ret[0].([]domain.SignUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fsquery indicates an expected call of Fsquery.
func (mr *MockCRUDMockRecorder) Fsquery(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fsquery", reflect.TypeOf((*MockCRUD)(nil).Fsquery), arg0)
}

// Fsread mocks base method.
func (m *MockCRUD) Fsread(arg0 string) (*domain.SignUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Fsread", arg0)
	ret0, _ := ret[0].(*domain.SignUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Fsread indicates an expected call of Fsread.
func (mr *MockCRUDMockRecorder) Fsread(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fsread", reflect.TypeOf((*MockCRUD)(nil).Fsread), arg0)
}
